library(httr)
response <- GET("https://official-joke-api.appspot.com/jokes/programming/random")
response

status <- status_code(response)
status

the_joke <- content(response)
the_joke

response <- GET("http://api.dataatwork.org/v1/jobs/8fd068c8d9be73abfa678856177b6c40")
response

status <- status_code(response)
status

the_job <- httr::content(response)
the_job

meetup_api_json_get_df <- function(endpoint, queries = list()) {
  
  # Preparing the URL 
  url <- modify_url("https://api.meetup.com", path = endpoint)
  
  # API requests
  response <- GET(url, query = queries)

  # Tracking errors
  if ( http_error(response) ){
    print(status_code(response))
    stop("Something went wrong.", call. = FALSE)
  }
    
  if (http_type(response) != "application/json") {
    stop("API did not return json", call. = FALSE)
  }
  
  # Extracting content
  json_text <- content(response, "text")
    
  # Converting content into Dataframe
  dataframe <- jsonlite::fromJSON(json_text)
    
  # Return the dataframe  
  dataframe
}

data_analytics_meetups <- meetup_api_json_get_df("find/topics", list(query = "data analytics",
                                                                     only = "id,name,description"))
data_analytics_meetups

# We use the existing `wb_api_json_get_df()` function as is.

wb_poverty_level <- wb_api_json_get_df("v2/country/afr/indicator/NV.AGR.PCAP.KD.ZG", list(format = "json", 
                                                                                 date="1989:2000"))
str(wb_poverty_level)

library(ggplot2)
ggplot(data = wb_poverty_level, aes(x = date, y = value, group = 1)) + geom_line() + ylab("Real agricultural GDP per capita growth rate (%)")
