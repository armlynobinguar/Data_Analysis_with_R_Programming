library(readr)
hn  <- read_csv("hacker_news.csv")

library(stringr)
titles <- hn$title
library(dplyr)
pattern <- "Amazon"
matches <- str_detect(titles, pattern)
hn_matches <- if_else(matches, "Match", "No Match")

pattern <- "[Aa]mazon"
matches <- str_detect(titles, pattern)
amazon_mentions <- sum(matches)

pattern <- "2000|2005|2010"
matches <- str_detect(titles, pattern)
hn_matches <- if_else(matches, "Match", "No Match")
hn_group <- hn %>%
    mutate(year_group = hn_matches)
    
google_titles_logical  <- str_detect(titles, "[Gg]oogle" )
google_titles  <-  titles[google_titles_logical]
hn_google <- hn %>%
    filter(google_titles_logical)
    
# The `titles` variable is available from
# previous screens
email_logical  <-  str_detect(titles, "e-?mail")
email_count  <-  sum(email_logical)
email_titles  <-  titles[email_logical]

pattern  <-  "\\[\\w+\\]"
tag_logical  <-  str_detect(titles, pattern)
tag_titles  <-  titles[tag_logical]
tag_count  <-  sum(tag_logical)

tag_titles  <-  titles[str_detect(titles, "\\[\\w+\\]")]
#the previous pattern  is "\\[\\w+\\]"
pattern  <-  "\\[(\\w+)\\]"
tags_text_matches <- str_match(tag_titles, pattern)[,2]
tags_freq <- table(tags_text_matches)

first_10_matches <- function (data, pattern) {
    matches <- str_detect(data, pattern) # finding pattern matches
    matched_df <- data[matches] # subsetting data (keep only matches)
    head(matched_df, 10) # taking the first ten matched elements
}
pattern  <-  "[Jj]ava[^Ss]"
java_titles  <-  titles[str_detect(titles, pattern)]

first_10_matches <- function (data, pattern) {
    matches <- str_detect(data, pattern) # finding pattern matches
    matched_df <- data[matches] # subsetting data (keep only matches)
    head(matched_df, 10) # taking the first ten matched elements
}
pattern  <-  "\\b[Jj]ava\\b"
java_titles  <-  titles[str_detect(titles, pattern)]
